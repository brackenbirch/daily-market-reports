name: Daily Market Summary

on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 * * 1-5'

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install packages
      run: pip install anthropic yfinance pandas tabulate
      
    - name: Create data fetcher
      run: |
        cat << 'ENDOFFILE' > fetch_data.py
        import yfinance as yf
        import json

        instruments = {
            "^GSPC": "S&P 500",
            "^IXIC": "NASDAQ", 
            "^DJI": "Dow Jones",
            "^N225": "Nikkei 225",
            "^HSI": "Hang Seng",
            "000001.SS": "Shanghai Composite",
            "^AXJO": "ASX 200",
            "^FTSE": "FTSE 100",
            "^GDAXI": "DAX",
            "^FCHI": "CAC 40",
            "EURUSD=X": "EUR/USD",
            "GBPUSD=X": "GBP/USD",
            "JPY=X": "USD/JPY",
            "GC=F": "Gold",
            "CL=F": "Crude Oil"
        }

        data = {}
        for ticker, name in instruments.items():
            try:
                stock = yf.Ticker(ticker)
                hist = stock.history(period="5d")
                if len(hist) >= 2:
                    current = float(hist['Close'].iloc[-1])
                    previous = float(hist['Close'].iloc[-2])
                    change_pct = ((current - previous) / previous) * 100
                    data[name] = {'price': round(current, 2), 'change': round(change_pct, 2)}
                    print(f"Success: {name}: {current:.2f} ({change_pct:+.2f}%)")
            except Exception as e:
                print(f"Error {name}: {e}")

        with open('market_data.json', 'w') as f:
            json.dump(data, f)
        print(f"Fetched {len(data)} instruments")
        ENDOFFILE

    - name: Create report generator
      run: |
        cat << 'ENDOFFILE' > generate_report.py
        import anthropic
        import json
        import os
        from datetime import datetime
        from tabulate import tabulate

        # Load market data
        with open('market_data.json', 'r') as f:
            data = json.load(f)

        # Create market data summary
        summary_parts = ["CURRENT MARKET DATA:", ""]

        groups = [
            ("US MARKETS", ["S&P 500", "NASDAQ", "Dow Jones"]),
            ("ASIAN MARKETS", ["Nikkei 225", "Hang Seng", "Shanghai Composite", "ASX 200"]),
            ("EUROPEAN MARKETS", ["FTSE 100", "DAX", "CAC 40"]),
            ("CURRENCIES", ["EUR/USD", "GBP/USD", "USD/JPY"]),
            ("COMMODITIES", ["Gold", "Crude Oil"])
        ]

        for group_name, instruments in groups:
            summary_parts.append(group_name + ":")
            for instrument in instruments:
                if instrument in data:
                    info = data[instrument]
                    line = "- " + instrument + ": " + str(info['price']) + " (" + str(info['change']) + "%)"
                    summary_parts.append(line)
            summary_parts.append("")

        market_summary = "\n".join(summary_parts)

        # Generate report with Claude
        print("Generating report with Claude...")
        client = anthropic.Anthropic(api_key=os.environ['ANTHROPIC_API_KEY'])

        prompt_text = "You are a senior financial analyst. Create a professional daily market summary using this data:\n\n"
        prompt_text += market_summary
        prompt_text += "\n\nInclude sections: EXECUTIVE SUMMARY, ASIAN MARKETS OVERNIGHT, EUROPEAN MARKETS SUMMARY, US MARKET OUTLOOK, CURRENCY & COMMODITIES WATCH, KEY TAKEAWAYS. Use sophisticated financial language for institutional clients."

        response = client.messages.create(
            model="claude-3-5-sonnet-20241022",
            max_tokens=4000,
            messages=[{"role": "user", "content": prompt_text}]
        )

        # Create enhanced report file
        os.makedirs('reports', exist_ok=True)
        today = datetime.now().strftime('%Y-%m-%d')
        filename = f'reports/market-summary-{today}.md'

        with open(filename, 'w') as f:
            f.write("# Enhanced Daily Market Summary\n")
            f.write(f"**{datetime.now().strftime('%A, %B %d, %Y')}**\n\n")
            f.write(f"*Analysis of {len(data)} global instruments*\n\n")
            f.write("---\n\n")
            f.write(response.content[0].text)
            f.write("\n\n---\n\n")
            f.write("## MARKET DATA TABLES\n\n")
            
            for title, instruments in groups:
                table_data = []
                for instrument in instruments:
                    if instrument in data:
                        info = data[instrument]
                        table_data.append([instrument, f"{info['price']:.2f}", f"{info['change']:+.2f}%"])
                
                if table_data:
                    f.write(f"### {title}\n\n")
                    headers = ['Instrument', 'Level', 'Change %']
                    table = tabulate(table_data, headers=headers, tablefmt='pipe')
                    f.write(table)
                    f.write("\n\n")
            
            f.write(f"\n*Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')}*\n")

        # Save info for GitHub issue
        with open('report_info.json', 'w') as f:
            json.dump({'filename': filename, 'count': len(data)}, f)

        print(f"Report saved: {filename}")
        ENDOFFILE

    - name: Fetch market data
      run: python fetch_data.py
        
    - name: Generate enhanced report
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: python generate_report.py
        
    - n
